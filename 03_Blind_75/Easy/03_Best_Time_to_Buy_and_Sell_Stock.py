"""
LeetCode 121. Best Time to Buy and Sell Stock
Difficulty: Easy
Category: Sliding Window

You are given an array prices where prices[i] is the price of a given stock on the ith day.
You want to maximize your profit by choosing a single day to buy one stock and choosing a 
different day in the future to sell that stock.
Return the maximum profit you can achieve from this transaction. If you cannot achieve any 
profit, return 0.

Time Complexity: O(n)
Space Complexity: O(1)
"""

def maxProfit(prices):
    """
    Find maximum profit from buying and selling stock once.
    
    Args:
        prices: Array of stock prices
        
    Returns:
        Maximum profit achievable
    """
    # TODO: Implement your solution here
    pass


# Test cases
def test_max_profit():
    """Test cases for Best Time to Buy and Sell Stock"""
    test_cases = [
        # Basic test cases
        ([7, 1, 5, 3, 6, 4], 5),
        ([7, 6, 4, 3, 1], 0),
        ([1, 2, 3, 4, 5], 4),
        ([5, 4, 3, 2, 1], 0),
        
        # Edge cases
        ([], 0),
        ([1], 0),
        ([1, 2], 1),
        ([2, 1], 0),
        ([1, 1], 0),
        ([1, 1, 1], 0),
        ([1, 2, 1], 1),
        ([2, 1, 2], 1),
        
        # LeetCode test cases
        ([7, 1, 5, 3, 6, 4], 5),
        ([7, 6, 4, 3, 1], 0),
        
        # Additional test cases
        ([1, 2, 3, 4, 5], 4),
        ([5, 4, 3, 2, 1], 0),
        ([1, 2, 1, 2, 1], 1),
        ([2, 1, 2, 1, 2], 1),
        ([1, 2, 3, 2, 1], 2),
        ([3, 2, 1, 2, 3], 2),
        ([1, 3, 2, 4, 1], 3),
        ([4, 1, 3, 2, 4], 3),
        
        # Single element
        ([1], 0),
        ([0], 0),
        ([100], 0),
        ([-1], 0),
        
        # Two elements
        ([1, 2], 1),
        ([2, 1], 0),
        ([1, 1], 0),
        ([0, 0], 0),
        ([100, 200], 100),
        ([200, 100], 0),
        ([100, 100], 0),
        
        # Three elements
        ([1, 2, 3], 2),
        ([3, 2, 1], 0),
        ([1, 3, 2], 2),
        ([2, 1, 3], 2),
        ([2, 3, 1], 1),
        ([3, 1, 2], 1),
        ([1, 1, 1], 0),
        ([1, 2, 1], 1),
        ([2, 1, 2], 1),
        
        # Four elements
        ([1, 2, 3, 4], 3),
        ([4, 3, 2, 1], 0),
        ([1, 3, 2, 4], 3),
        ([2, 1, 3, 4], 3),
        ([2, 3, 1, 4], 3),
        ([3, 1, 2, 4], 3),
        ([3, 2, 1, 4], 3),
        ([4, 1, 2, 3], 2),
        ([4, 2, 1, 3], 2),
        ([4, 3, 1, 2], 1),
        ([1, 1, 1, 1], 0),
        ([1, 2, 1, 2], 1),
        ([2, 1, 2, 1], 1),
        ([1, 2, 2, 1], 1),
        ([2, 1, 1, 2], 1),
        
        # Five elements
        ([1, 2, 3, 4, 5], 4),
        ([5, 4, 3, 2, 1], 0),
        ([1, 3, 2, 4, 5], 4),
        ([2, 1, 3, 4, 5], 4),
        ([2, 3, 1, 4, 5], 4),
        ([3, 1, 2, 4, 5], 4),
        ([3, 2, 1, 4, 5], 4),
        ([4, 1, 2, 3, 5], 4),
        ([4, 2, 1, 3, 5], 4),
        ([4, 3, 1, 2, 5], 4),
        ([5, 1, 2, 3, 4], 3),
        ([5, 2, 1, 3, 4], 3),
        ([5, 3, 1, 2, 4], 3),
        ([5, 4, 1, 2, 3], 2),
        ([1, 1, 1, 1, 1], 0),
        ([1, 2, 1, 2, 1], 1),
        ([2, 1, 2, 1, 2], 1),
        ([1, 2, 2, 1, 2], 1),
        ([2, 1, 1, 2, 1], 1),
        ([1, 2, 1, 1, 2], 1),
        ([2, 1, 2, 2, 1], 1),
        
        # Six elements
        ([1, 2, 3, 4, 5, 6], 5),
        ([6, 5, 4, 3, 2, 1], 0),
        ([1, 3, 2, 4, 5, 6], 5),
        ([2, 1, 3, 4, 5, 6], 5),
        ([2, 3, 1, 4, 5, 6], 5),
        ([3, 1, 2, 4, 5, 6], 5),
        ([3, 2, 1, 4, 5, 6], 5),
        ([4, 1, 2, 3, 5, 6], 5),
        ([4, 2, 1, 3, 5, 6], 5),
        ([4, 3, 1, 2, 5, 6], 5),
        ([5, 1, 2, 3, 4, 6], 5),
        ([5, 2, 1, 3, 4, 6], 5),
        ([5, 3, 1, 2, 4, 6], 5),
        ([5, 4, 1, 2, 3, 6], 5),
        ([6, 1, 2, 3, 4, 5], 4),
        ([6, 2, 1, 3, 4, 5], 4),
        ([6, 3, 1, 2, 4, 5], 4),
        ([6, 4, 1, 2, 3, 5], 4),
        ([6, 5, 1, 2, 3, 4], 3),
        ([1, 1, 1, 1, 1, 1], 0),
        ([1, 2, 1, 2, 1, 2], 1),
        ([2, 1, 2, 1, 2, 1], 1),
        ([1, 2, 2, 1, 2, 1], 1),
        ([2, 1, 1, 2, 1, 2], 1),
        ([1, 2, 1, 1, 2, 1], 1),
        ([2, 1, 2, 2, 1, 2], 1),
        
        # Seven elements
        ([1, 2, 3, 4, 5, 6, 7], 6),
        ([7, 6, 5, 4, 3, 2, 1], 0),
        ([1, 3, 2, 4, 5, 6, 7], 6),
        ([2, 1, 3, 4, 5, 6, 7], 6),
        ([2, 3, 1, 4, 5, 6, 7], 6),
        ([3, 1, 2, 4, 5, 6, 7], 6),
        ([3, 2, 1, 4, 5, 6, 7], 6),
        ([4, 1, 2, 3, 5, 6, 7], 6),
        ([4, 2, 1, 3, 5, 6, 7], 6),
        ([4, 3, 1, 2, 5, 6, 7], 6),
        ([5, 1, 2, 3, 4, 6, 7], 6),
        ([5, 2, 1, 3, 4, 6, 7], 6),
        ([5, 3, 1, 2, 4, 6, 7], 6),
        ([5, 4, 1, 2, 3, 6, 7], 6),
        ([6, 1, 2, 3, 4, 5, 7], 6),
        ([6, 2, 1, 3, 4, 5, 7], 6),
        ([6, 3, 1, 2, 4, 5, 7], 6),
        ([6, 4, 1, 2, 3, 5, 7], 6),
        ([6, 5, 1, 2, 3, 4, 7], 6),
        ([7, 1, 2, 3, 4, 5, 6], 5),
        ([7, 2, 1, 3, 4, 5, 6], 5),
        ([7, 3, 1, 2, 4, 5, 6], 5),
        ([7, 4, 1, 2, 3, 5, 6], 5),
        ([7, 5, 1, 2, 3, 4, 6], 5),
        ([7, 6, 1, 2, 3, 4, 5], 4),
        ([1, 1, 1, 1, 1, 1, 1], 0),
        ([1, 2, 1, 2, 1, 2, 1], 1),
        ([2, 1, 2, 1, 2, 1, 2], 1),
        ([1, 2, 2, 1, 2, 1, 2], 1),
        ([2, 1, 1, 2, 1, 2, 1], 1),
        ([1, 2, 1, 1, 2, 1, 2], 1),
        ([2, 1, 2, 2, 1, 2, 1], 1),
        
        # Eight elements
        ([1, 2, 3, 4, 5, 6, 7, 8], 7),
        ([8, 7, 6, 5, 4, 3, 2, 1], 0),
        ([1, 3, 2, 4, 5, 6, 7, 8], 7),
        ([2, 1, 3, 4, 5, 6, 7, 8], 7),
        ([2, 3, 1, 4, 5, 6, 7, 8], 7),
        ([3, 1, 2, 4, 5, 6, 7, 8], 7),
        ([3, 2, 1, 4, 5, 6, 7, 8], 7),
        ([4, 1, 2, 3, 5, 6, 7, 8], 7),
        ([4, 2, 1, 3, 5, 6, 7, 8], 7),
        ([4, 3, 1, 2, 5, 6, 7, 8], 7),
        ([5, 1, 2, 3, 4, 6, 7, 8], 7),
        ([5, 2, 1, 3, 4, 6, 7, 8], 7),
        ([5, 3, 1, 2, 4, 6, 7, 8], 7),
        ([5, 4, 1, 2, 3, 6, 7, 8], 7),
        ([6, 1, 2, 3, 4, 5, 7, 8], 7),
        ([6, 2, 1, 3, 4, 5, 7, 8], 7),
        ([6, 3, 1, 2, 4, 5, 7, 8], 7),
        ([6, 4, 1, 2, 3, 5, 7, 8], 7),
        ([6, 5, 1, 2, 3, 4, 7, 8], 7),
        ([7, 1, 2, 3, 4, 5, 6, 8], 7),
        ([7, 2, 1, 3, 4, 5, 6, 8], 7),
        ([7, 3, 1, 2, 4, 5, 6, 8], 7),
        ([7, 4, 1, 2, 3, 5, 6, 8], 7),
        ([7, 5, 1, 2, 3, 4, 6, 8], 7),
        ([7, 6, 1, 2, 3, 4, 5, 8], 7),
        ([8, 1, 2, 3, 4, 5, 6, 7], 6),
        ([8, 2, 1, 3, 4, 5, 6, 7], 6),
        ([8, 3, 1, 2, 4, 5, 6, 7], 6),
        ([8, 4, 1, 2, 3, 5, 6, 7], 6),
        ([8, 5, 1, 2, 3, 4, 6, 7], 6),
        ([8, 6, 1, 2, 3, 4, 5, 7], 6),
        ([8, 7, 1, 2, 3, 4, 5, 6], 5),
        ([1, 1, 1, 1, 1, 1, 1, 1], 0),
        ([1, 2, 1, 2, 1, 2, 1, 2], 1),
        ([2, 1, 2, 1, 2, 1, 2, 1], 1),
        ([1, 2, 2, 1, 2, 1, 2, 1], 1),
        ([2, 1, 1, 2, 1, 2, 1, 2], 1),
        ([1, 2, 1, 1, 2, 1, 2, 1], 1),
        ([2, 1, 2, 2, 1, 2, 1, 2], 1),
        
        # Nine elements
        ([1, 2, 3, 4, 5, 6, 7, 8, 9], 8),
        ([9, 8, 7, 6, 5, 4, 3, 2, 1], 0),
        ([1, 3, 2, 4, 5, 6, 7, 8, 9], 8),
        ([2, 1, 3, 4, 5, 6, 7, 8, 9], 8),
        ([2, 3, 1, 4, 5, 6, 7, 8, 9], 8),
        ([3, 1, 2, 4, 5, 6, 7, 8, 9], 8),
        ([3, 2, 1, 4, 5, 6, 7, 8, 9], 8),
        ([4, 1, 2, 3, 5, 6, 7, 8, 9], 8),
        ([4, 2, 1, 3, 5, 6, 7, 8, 9], 8),
        ([4, 3, 1, 2, 5, 6, 7, 8, 9], 8),
        ([5, 1, 2, 3, 4, 6, 7, 8, 9], 8),
        ([5, 2, 1, 3, 4, 6, 7, 8, 9], 8),
        ([5, 3, 1, 2, 4, 6, 7, 8, 9], 8),
        ([5, 4, 1, 2, 3, 6, 7, 8, 9], 8),
        ([6, 1, 2, 3, 4, 5, 7, 8, 9], 8),
        ([6, 2, 1, 3, 4, 5, 7, 8, 9], 8),
        ([6, 3, 1, 2, 4, 5, 7, 8, 9], 8),
        ([6, 4, 1, 2, 3, 5, 7, 8, 9], 8),
        ([6, 5, 1, 2, 3, 4, 7, 8, 9], 8),
        ([7, 1, 2, 3, 4, 5, 6, 8, 9], 8),
        ([7, 2, 1, 3, 4, 5, 6, 8, 9], 8),
        ([7, 3, 1, 2, 4, 5, 6, 8, 9], 8),
        ([7, 4, 1, 2, 3, 5, 6, 8, 9], 8),
        ([7, 5, 1, 2, 3, 4, 6, 8, 9], 8),
        ([7, 6, 1, 2, 3, 4, 5, 8, 9], 8),
        ([8, 1, 2, 3, 4, 5, 6, 7, 9], 8),
        ([8, 2, 1, 3, 4, 5, 6, 7, 9], 8),
        ([8, 3, 1, 2, 4, 5, 6, 7, 9], 8),
        ([8, 4, 1, 2, 3, 5, 6, 7, 9], 8),
        ([8, 5, 1, 2, 3, 4, 6, 7, 9], 8),
        ([8, 6, 1, 2, 3, 4, 5, 7, 9], 8),
        ([8, 7, 1, 2, 3, 4, 5, 6, 9], 8),
        ([9, 1, 2, 3, 4, 5, 6, 7, 8], 7),
        ([9, 2, 1, 3, 4, 5, 6, 7, 8], 7),
        ([9, 3, 1, 2, 4, 5, 6, 7, 8], 7),
        ([9, 4, 1, 2, 3, 5, 6, 7, 8], 7),
        ([9, 5, 1, 2, 3, 4, 6, 7, 8], 7),
        ([9, 6, 1, 2, 3, 4, 5, 7, 8], 7),
        ([9, 7, 1, 2, 3, 4, 5, 6, 8], 7),
        ([9, 8, 1, 2, 3, 4, 5, 6, 7], 6),
        ([1, 1, 1, 1, 1, 1, 1, 1, 1], 0),
        ([1, 2, 1, 2, 1, 2, 1, 2, 1], 1),
        ([2, 1, 2, 1, 2, 1, 2, 1, 2], 1),
        ([1, 2, 2, 1, 2, 1, 2, 1, 2], 1),
        ([2, 1, 1, 2, 1, 2, 1, 2, 1], 1),
        ([1, 2, 1, 1, 2, 1, 2, 1, 2], 1),
        ([2, 1, 2, 2, 1, 2, 1, 2, 1], 1),
        
        # Ten elements
        ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 9),
        ([10, 9, 8, 7, 6, 5, 4, 3, 2, 1], 0),
        ([1, 3, 2, 4, 5, 6, 7, 8, 9, 10], 9),
        ([2, 1, 3, 4, 5, 6, 7, 8, 9, 10], 9),
        ([2, 3, 1, 4, 5, 6, 7, 8, 9, 10], 9),
        ([3, 1, 2, 4, 5, 6, 7, 8, 9, 10], 9),
        ([3, 2, 1, 4, 5, 6, 7, 8, 9, 10], 9),
        ([4, 1, 2, 3, 5, 6, 7, 8, 9, 10], 9),
        ([4, 2, 1, 3, 5, 6, 7, 8, 9, 10], 9),
        ([4, 3, 1, 2, 5, 6, 7, 8, 9, 10], 9),
        ([5, 1, 2, 3, 4, 6, 7, 8, 9, 10], 9),
        ([5, 2, 1, 3, 4, 6, 7, 8, 9, 10], 9),
        ([5, 3, 1, 2, 4, 6, 7, 8, 9, 10], 9),
        ([5, 4, 1, 2, 3, 6, 7, 8, 9, 10], 9),
        ([6, 1, 2, 3, 4, 5, 7, 8, 9, 10], 9),
        ([6, 2, 1, 3, 4, 5, 7, 8, 9, 10], 9),
        ([6, 3, 1, 2, 4, 5, 7, 8, 9, 10], 9),
        ([6, 4, 1, 2, 3, 5, 7, 8, 9, 10], 9),
        ([6, 5, 1, 2, 3, 4, 7, 8, 9, 10], 9),
        ([7, 1, 2, 3, 4, 5, 6, 8, 9, 10], 9),
        ([7, 2, 1, 3, 4, 5, 6, 8, 9, 10], 9),
        ([7, 3, 1, 2, 4, 5, 6, 8, 9, 10], 9),
        ([7, 4, 1, 2, 3, 5, 6, 8, 9, 10], 9),
        ([7, 5, 1, 2, 3, 4, 6, 8, 9, 10], 9),
        ([7, 6, 1, 2, 3, 4, 5, 8, 9, 10], 9),
        ([8, 1, 2, 3, 4, 5, 6, 7, 9, 10], 9),
        ([8, 2, 1, 3, 4, 5, 6, 7, 9, 10], 9),
        ([8, 3, 1, 2, 4, 5, 6, 7, 9, 10], 9),
        ([8, 4, 1, 2, 3, 5, 6, 7, 9, 10], 9),
        ([8, 5, 1, 2, 3, 4, 6, 7, 9, 10], 9),
        ([8, 6, 1, 2, 3, 4, 5, 7, 9, 10], 9),
        ([8, 7, 1, 2, 3, 4, 5, 6, 9, 10], 9),
        ([9, 1, 2, 3, 4, 5, 6, 7, 8, 10], 9),
        ([9, 2, 1, 3, 4, 5, 6, 7, 8, 10], 9),
        ([9, 3, 1, 2, 4, 5, 6, 7, 8, 10], 9),
        ([9, 4, 1, 2, 3, 5, 6, 7, 8, 10], 9),
        ([9, 5, 1, 2, 3, 4, 6, 7, 8, 10], 9),
        ([9, 6, 1, 2, 3, 4, 5, 7, 8, 10], 9),
        ([9, 7, 1, 2, 3, 4, 5, 6, 8, 10], 9),
        ([9, 8, 1, 2, 3, 4, 5, 6, 7, 10], 9),
        ([10, 1, 2, 3, 4, 5, 6, 7, 8, 9], 8),
        ([10, 2, 1, 3, 4, 5, 6, 7, 8, 9], 8),
        ([10, 3, 1, 2, 4, 5, 6, 7, 8, 9], 8),
        ([10, 4, 1, 2, 3, 5, 6, 7, 8, 9], 8),
        ([10, 5, 1, 2, 3, 4, 6, 7, 8, 9], 8),
        ([10, 6, 1, 2, 3, 4, 5, 7, 8, 9], 8),
        ([10, 7, 1, 2, 3, 4, 5, 6, 8, 9], 8),
        ([10, 8, 1, 2, 3, 4, 5, 6, 7, 9], 8),
        ([10, 9, 1, 2, 3, 4, 5, 6, 7, 8], 7),
        ([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 0),
        ([1, 2, 1, 2, 1, 2, 1, 2, 1, 2], 1),
        ([2, 1, 2, 1, 2, 1, 2, 1, 2, 1], 1),
        ([1, 2, 2, 1, 2, 1, 2, 1, 2, 1], 1),
        ([2, 1, 1, 2, 1, 2, 1, 2, 1, 2], 1),
        ([1, 2, 1, 1, 2, 1, 2, 1, 2, 1], 1),
        ([2, 1, 2, 2, 1, 2, 1, 2, 1, 2], 1),
        
        # Large arrays
        (list(range(1, 101)), 99),  # [1, 2, 3, ..., 100]
        (list(range(100, 0, -1)), 0),  # [100, 99, 98, ..., 1]
        (list(range(1, 201)), 199),  # [1, 2, 3, ..., 200]
        (list(range(200, 0, -1)), 0),  # [200, 199, 198, ..., 1]
        (list(range(1, 501)), 499),  # [1, 2, 3, ..., 500]
        (list(range(500, 0, -1)), 0),  # [500, 499, 498, ..., 1]
        (list(range(1, 1001)), 999),  # [1, 2, 3, ..., 1000]
        (list(range(1000, 0, -1)), 0),  # [1000, 999, 998, ..., 1]
        
        # Very large arrays
        (list(range(1, 10001)), 9999),  # [1, 2, 3, ..., 10000]
        (list(range(10000, 0, -1)), 0),  # [10000, 9999, 9998, ..., 1]
        (list(range(1, 50001)), 49999),  # [1, 2, 3, ..., 50000]
        (list(range(50000, 0, -1)), 0),  # [50000, 49999, 49998, ..., 1]
        (list(range(1, 100001)), 99999),  # [1, 2, 3, ..., 100000]
        (list(range(100000, 0, -1)), 0),  # [100000, 99999, 99998, ..., 1]
        
        # Edge cases with empty array
        ([], 0),
        
        # Edge cases with single element
        ([1], 0),
        ([0], 0),
        ([100], 0),
        ([-1], 0),
        ([1000000000], 0),
        ([-1000000000], 0),
        
        # Edge cases with two elements
        ([1, 2], 1),
        ([2, 1], 0),
        ([1, 1], 0),
        ([0, 0], 0),
        ([100, 200], 100),
        ([200, 100], 0),
        ([100, 100], 0),
        ([-1, 1], 2),
        ([1, -1], 0),
        ([-1, -1], 0),
        ([1000000000, 2000000000], 1000000000),
        ([2000000000, 1000000000], 0),
        ([1000000000, 1000000000], 0),
        
        # Edge cases with three elements
        ([1, 2, 3], 2),
        ([3, 2, 1], 0),
        ([1, 3, 2], 2),
        ([2, 1, 3], 2),
        ([2, 3, 1], 1),
        ([3, 1, 2], 1),
        ([1, 1, 1], 0),
        ([1, 2, 1], 1),
        ([2, 1, 2], 1),
        ([0, 0, 0], 0),
        ([0, 1, 0], 1),
        ([1, 0, 1], 1),
        ([100, 200, 300], 200),
        ([300, 200, 100], 0),
        ([100, 300, 200], 200),
        ([200, 100, 300], 200),
        ([200, 300, 100], 100),
        ([300, 100, 200], 100),
        ([100, 100, 100], 0),
        ([100, 200, 100], 100),
        ([200, 100, 200], 100),
        ([-1, 0, 1], 2),
        ([1, 0, -1], 0),
        ([0, 1, -1], 1),
        ([0, -1, 1], 2),
        ([-1, 1, 0], 2),
        ([1, -1, 0], 1),
        ([-1, -1, -1], 0),
        ([-1, 0, -1], 1),
        ([0, -1, 0], 1),
        ([1000000000, 2000000000, 3000000000], 2000000000),
        ([3000000000, 2000000000, 1000000000], 0),
        ([1000000000, 3000000000, 2000000000], 2000000000),
        ([2000000000, 1000000000, 3000000000], 2000000000),
        ([2000000000, 3000000000, 1000000000], 1000000000),
        ([3000000000, 1000000000, 2000000000], 1000000000),
        ([1000000000, 1000000000, 1000000000], 0),
        ([1000000000, 2000000000, 1000000000], 1000000000),
        ([2000000000, 1000000000, 2000000000], 1000000000),
        
        # Edge cases with four elements
        ([1, 2, 3, 4], 3),
        ([4, 3, 2, 1], 0),
        ([1, 3, 2, 4], 3),
        ([2, 1, 3, 4], 3),
        ([2, 3, 1, 4], 3),
        ([3, 1, 2, 4], 3),
        ([3, 2, 1, 4], 3),
        ([4, 1, 2, 3], 2),
        ([4, 2, 1, 3], 2),
        ([4, 3, 1, 2], 1),
        ([1, 1, 1, 1], 0),
        ([1, 2, 1, 2], 1),
        ([2, 1, 2, 1], 1),
        ([1, 2, 2, 1], 1),
        ([2, 1, 1, 2], 1),
        ([0, 0, 0, 0], 0),
        ([0, 1, 0, 1], 1),
        ([1, 0, 1, 0], 1),
        ([0, 1, 1, 0], 1),
        ([1, 0, 0, 1], 1),
        ([100, 200, 300, 400], 300),
        ([400, 300, 200, 100], 0),
        ([100, 300, 200, 400], 300),
        ([200, 100, 300, 400], 300),
        ([200, 300, 100, 400], 300),
        ([300, 100, 200, 400], 300),
        ([300, 200, 100, 400], 300),
        ([400, 100, 200, 300], 200),
        ([400, 200, 100, 300], 200),
        ([400, 300, 100, 200], 100),
        ([100, 100, 100, 100], 0),
        ([100, 200, 100, 200], 100),
        ([200, 100, 200, 100], 100),
        ([100, 200, 200, 100], 100),
        ([200, 100, 100, 200], 100),
        ([-1, 0, 1, 2], 3),
        ([2, 1, 0, -1], 0),
        ([0, 1, -1, 2], 3),
        ([1, 0, -1, 2], 3),
        ([1, -1, 0, 2], 3),
        ([-1, 1, 0, 2], 3),
        ([-1, 0, 1, 2], 3),
        ([2, 0, 1, -1], 1),
        ([2, 1, 0, -1], 0),
        ([2, -1, 0, 1], 2),
        ([-1, -1, -1, -1], 0),
        ([-1, 0, -1, 0], 1),
        ([0, -1, 0, -1], 1),
        ([-1, 0, 0, -1], 1),
        ([0, -1, -1, 0], 1),
        ([1000000000, 2000000000, 3000000000, 4000000000], 3000000000),
        ([4000000000, 3000000000, 2000000000, 1000000000], 0),
        ([1000000000, 3000000000, 2000000000, 4000000000], 3000000000),
        ([2000000000, 1000000000, 3000000000, 4000000000], 3000000000),
        ([2000000000, 3000000000, 1000000000, 4000000000], 3000000000),
        ([3000000000, 1000000000, 2000000000, 4000000000], 3000000000),
        ([3000000000, 2000000000, 1000000000, 4000000000], 3000000000),
        ([4000000000, 1000000000, 2000000000, 3000000000], 2000000000),
        ([4000000000, 2000000000, 1000000000, 3000000000], 2000000000),
        ([4000000000, 3000000000, 1000000000, 2000000000], 1000000000),
        ([1000000000, 1000000000, 1000000000, 1000000000], 0),
        ([1000000000, 2000000000, 1000000000, 2000000000], 1000000000),
        ([2000000000, 1000000000, 2000000000, 1000000000], 1000000000),
        ([1000000000, 2000000000, 2000000000, 1000000000], 1000000000),
        ([2000000000, 1000000000, 1000000000, 2000000000], 1000000000),
        
        # Edge cases with five elements
        ([1, 2, 3, 4, 5], 4),
        ([5, 4, 3, 2, 1], 0),
        ([1, 3, 2, 4, 5], 4),
        ([2, 1, 3, 4, 5], 4),
        ([2, 3, 1, 4, 5], 4),
        ([3, 1, 2, 4, 5], 4),
        ([3, 2, 1, 4, 5], 4),
        ([4, 1, 2, 3, 5], 4),
        ([4, 2, 1, 3, 5], 4),
        ([4, 3, 1, 2, 5], 4),
        ([5, 1, 2, 3, 4], 3),
        ([5, 2, 1, 3, 4], 3),
        ([5, 3, 1, 2, 4], 3),
        ([5, 4, 1, 2, 3], 2),
        ([1, 1, 1, 1, 1], 0),
        ([1, 2, 1, 2, 1], 1),
        ([2, 1, 2, 1, 2], 1),
        ([1, 2, 2, 1, 2], 1),
        ([2, 1, 1, 2, 1], 1),
        ([1, 2, 1, 1, 2], 1),
        ([2, 1, 2, 2, 1], 1),
        ([0, 0, 0, 0, 0], 0),
        ([0, 1, 0, 1, 0], 1),
        ([1, 0, 1, 0, 1], 1),
        ([0, 1, 1, 0, 1], 1),
        ([1, 0, 0, 1, 0], 1),
        ([0, 1, 0, 0, 1], 1),
        ([1, 0, 1, 1, 0], 1),
        ([100, 200, 300, 400, 500], 400),
        ([500, 400, 300, 200, 100], 0),
        ([100, 300, 200, 400, 500], 400),
        ([200, 100, 300, 400, 500], 400),
        ([200, 300, 100, 400, 500], 400),
        ([300, 100, 200, 400, 500], 400),
        ([300, 200, 100, 400, 500], 400),
        ([400, 100, 200, 300, 500], 400),
        ([400, 200, 100, 300, 500], 400),
        ([400, 300, 100, 200, 500], 400),
        ([500, 100, 200, 300, 400], 300),
        ([500, 200, 100, 300, 400], 300),
        ([500, 300, 100, 200, 400], 300),
        ([500, 400, 100, 200, 300], 200),
        ([100, 100, 100, 100, 100], 0),
        ([100, 200, 100, 200, 100], 100),
        ([200, 100, 200, 100, 200], 100),
        ([100, 200, 200, 100, 200], 100),
        ([200, 100, 100, 200, 100], 100),
        ([100, 200, 100, 100, 200], 100),
        ([200, 100, 200, 200, 100], 100),
        ([-1, 0, 1, 2, 3], 4),
        ([3, 2, 1, 0, -1], 0),
        ([0, 1, -1, 2, 3], 4),
        ([1, 0, -1, 2, 3], 4),
        ([1, -1, 0, 2, 3], 4),
        ([-1, 1, 0, 2, 3], 4),
        ([-1, 0, 1, 2, 3], 4),
        ([3, 0, 1, -1, 2], 2),
        ([3, 1, 0, -1, 2], 2),
        ([3, -1, 0, 1, 2], 3),
        ([3, 2, 0, 1, -1], 1),
        ([-1, -1, -1, -1, -1], 0),
        ([-1, 0, -1, 0, -1], 1),
        ([0, -1, 0, -1, 0], 1),
        ([-1, 0, 0, -1, 0], 1),
        ([0, -1, -1, 0, -1], 1),
        ([-1, 0, -1, -1, 0], 1),
        ([0, -1, 0, 0, -1], 1),
        ([1000000000, 2000000000, 3000000000, 4000000000, 5000000000], 4000000000),
        ([5000000000, 4000000000, 3000000000, 2000000000, 1000000000], 0),
        ([1000000000, 3000000000, 2000000000, 4000000000, 5000000000], 4000000000),
        ([2000000000, 1000000000, 3000000000, 4000000000, 5000000000], 4000000000),
        ([2000000000, 3000000000, 1000000000, 4000000000, 5000000000], 4000000000),
        ([3000000000, 1000000000, 2000000000, 4000000000, 5000000000], 4000000000),
        ([3000000000, 2000000000, 1000000000, 4000000000, 5000000000], 4000000000),
        ([4000000000, 1000000000, 2000000000, 3000000000, 5000000000], 4000000000),
        ([4000000000, 2000000000, 1000000000, 3000000000, 5000000000], 4000000000),
        ([4000000000, 3000000000, 1000000000, 2000000000, 5000000000], 4000000000),
        ([5000000000, 1000000000, 2000000000, 3000000000, 4000000000], 3000000000),
        ([5000000000, 2000000000, 1000000000, 3000000000, 4000000000], 3000000000),
        ([5000000000, 3000000000, 1000000000, 2000000000, 4000000000], 3000000000),
        ([5000000000, 4000000000, 1000000000, 2000000000, 3000000000], 2000000000),
        ([1000000000, 1000000000, 1000000000, 1000000000, 1000000000], 0),
        ([1000000000, 2000000000, 1000000000, 2000000000, 1000000000], 1000000000),
        ([2000000000, 1000000000, 2000000000, 1000000000, 2000000000], 1000000000),
        ([1000000000, 2000000000, 2000000000, 1000000000, 2000000000], 1000000000),
        ([2000000000, 1000000000, 1000000000, 2000000000, 1000000000], 1000000000),
        ([1000000000, 2000000000, 1000000000, 1000000000, 2000000000], 1000000000),
        ([2000000000, 1000000000, 2000000000, 2000000000, 1000000000], 1000000000),
    ]
    
    print("Testing Best Time to Buy and Sell Stock solution...")
    for i, (prices, expected) in enumerate(test_cases):
        result = maxProfit(prices)
        if result == expected:
            print(f"✓ Test {i+1} passed: prices={prices}, result={result}")
        else:
            print(f"✗ Test {i+1} failed: prices={prices}")
            print(f"  Expected: {expected}, Got: {result}")
    
    print("\nAll tests completed!")


# Performance test
def test_performance():
    """Test solution performance with large input"""
    import time
    
    # Generate large array
    large_prices = list(range(1, 10001))  # [1, 2, 3, ..., 10000]
    
    start_time = time.time()
    result = maxProfit(large_prices)
    end_time = time.time()
    
    print(f"\nPerformance Test:")
    print(f"Large array (10,000 elements): {end_time - start_time:.4f} seconds")
    print(f"Result: {result}")


if __name__ == "__main__":
    test_max_profit()
    test_performance()